name: Auto Format & Fix

on:
  push:
    branches: [ develop, feature/* ]
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Target branch to format'
        required: false
        default: 'develop'

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-format:
    name: Auto Format Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'backend/requirements.txt'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Python formatting tools
      run: |
        pip install black isort autoflake
    
    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm ci
        npm install --save-dev prettier
    
    - name: Format Python code with Black
      run: |
        cd backend
        black . --line-length=88
    
    - name: Sort Python imports with isort
      run: |
        cd backend
        isort . --profile=black --line-length=88
    
    - name: Remove unused imports with autoflake
      run: |
        cd backend
        autoflake --remove-all-unused-imports --recursive --in-place . --exclude=__pycache__,*.pyc,venv
    
    - name: Format JavaScript/TypeScript with Prettier
      run: |
        cd frontend
        npx prettier --write "**/*.{js,jsx,ts,tsx,json,css,md}"
    
    - name: Format YAML files
      run: |
        pip install ruamel.yaml
        python -c "
        import ruamel.yaml
        import glob
        yaml = ruamel.yaml.YAML()
        yaml.preserve_quotes = True
        yaml.width = 4096
        for file in glob.glob('**/*.yml', recursive=True) + glob.glob('**/*.yaml', recursive=True):
            if '.git' not in file and 'node_modules' not in file:
                try:
                    with open(file, 'r') as f:
                        data = yaml.load(f)
                    with open(file, 'w') as f:
                        yaml.dump(data, f)
                    print(f'Formatted: {file}')
                except Exception as e:
                    print(f'Skipped {file}: {e}')
        "
    
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "üé® Auto-format code [skip ci]
        
        - Format Python code with Black
        - Sort imports with isort
        - Remove unused imports
        - Format JS/TS with Prettier
        - Format YAML files
        
        Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
        git push
    
    - name: Create PR comment
      if: github.event_name == 'pull_request' && steps.changes.outputs.has_changes == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üé® **Auto-formatting completed!**\n\nCode has been automatically formatted using:\n- Black (Python)\n- isort (Python imports)\n- Prettier (JS/TS)\n- YAML formatter\n\nPlease pull the latest changes to your local branch.'
          })

  lint-fix:
    name: Auto Fix Linting Issues
    runs-on: ubuntu-latest
    needs: auto-format
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install flake8 autopep8
    
    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm ci
        npm install --save-dev eslint @typescript-eslint/eslint-plugin @typescript-eslint/parser
    
    - name: Auto-fix Python issues with autopep8
      run: |
        cd backend
        autopep8 --in-place --recursive --aggressive --aggressive .
    
    - name: Auto-fix ESLint issues
      run: |
        cd frontend
        npx eslint . --ext .js,.jsx,.ts,.tsx --fix || true
    
    - name: Check for changes
      id: lint_changes
      run: |
        if git diff --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit lint fixes
      if: steps.lint_changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "üêõ Auto-fix linting issues [skip ci]
        
        - Fix Python style issues with autopep8
        - Fix ESLint issues automatically
        
        Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
        git push
